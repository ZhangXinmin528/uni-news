<template>
	<view class="tabs">
		<scroll-view ref="tabbar" id="tab-bar" class="tab-bar" :scroll="false" :scroll-x="true" :show-scrollbar="false"
			:scroll-into-view="scrollInto">

			<view style="flex-direction: column;">

				<view style="flex-direction: row;">

					<view class="uni-tab-item" v-for="(tab,index) in tabList" :key="tab.id" :id="tab.id"
						:ref="'tabitem'+index" :data-id="index" :data-current="index" @click="onTabTap">

						<text class="uni-tab-item-title"
							:class="tabIndex == index?'uni-tab-item-title-active':''">{{tab.name}}</text>
					</view>
				</view>

				<view class="scroll-view-indicator">
					<view ref="underline" class="scroll-view-underline" :class="isTab?'scroll-view-animation':''"
						:style="{left:indicatorLineLeft+'px',width:indicatorLineWidth+'px'}"></view>
				</view>

			</view>

		</scroll-view>

		<view class="tab-bar-line"></view>

		<swiper class="tab-box" ref="swiper1" :current="tabIndex" :duration="300" @change="onSwiperChange"
			@transition="onSwiperScroll" @animationfinish="animationFinish" @onAnimationEnd="animationFinish">
			<swiper-item class="swiper-item" v-for="(page,index) in tabList" :key="index">
				<newsPage class="page-item" :nid="page.newsid" :ref="'page'+index"></newsPage>
			</swiper-item>
		</swiper>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModel('dom');
	// #endif

	import newsPage from './news-page/news-page.nvue'

	//缓存每页最多
	const MAX_CACHE_DATA = 100;
	//缓存页签数量
	const MAX_CACHE_PAGE = 3;
	const TAB_PRELOAD_OFFSET = 1;

	export default {
		components: {
			newsPage
		},
		data() {
			return {
				tabList: [{
					id: "tab01",
					name: '最新',
					newsid: 0
				}, {
					id: "tab02",
					name: '大公司',
					newsid: 23
				}, {
					id: "tab03",
					name: '内容',
					newsid: 223
				}, {
					id: "tab04",
					name: '消费',
					newsid: 221
				}, {
					id: "tab05",
					name: '娱乐',
					newsid: 225
				}, {
					id: "tab06",
					name: '区块链',
					newsid: 208
				}],
				tabIndex: 0,
				cacheTab: [],
				scrollInto: "",
				navigateFlag: false,
				indicatorLineLeft: 0,
				indicatorLineWidth: 0,
				isTab: false
			}
		},
		onReady() {
			this._lastTabIndex = 0;
			this.tabListSize = {};
			this.swiperWidth = 0;
			this._touchTabIndex = 0;
			this.tabbarWidth = 0;

			this.pageList = [];
			for (var i = 0; i < this.tabList.length; i++) {
				let item = this.$refs['page' + i]
				if (Array.isArray(item)) {
					this.pageList.push(item[0])
				} else {
					this.pageList.push(item)
				}
			}
			this.switchTab(this.tabIndex);
			this.selectorQuery();

		},
		methods: {
			onTabTap(e) {
				let index = e.target.dataset.current || e.currentTarget.dataset.current;

				// #ifdef APP-PLUS || H5 ||MP-WEIXIN || MP-QQ
				this.isTab = true;
				var currentSize = this.tabListSize[index];
				this.updateIndicator(currentSize.left, currentSize.width);
				this._touchTabIndex = index;
				// #endif
				this.switchTab(index);

			},
			loadTabData(index) {
				this.pageList[index].loadData()
			},
			clearTabData(index) {
				this.pageList[index].clear()
			},
			onSwiperChange(e) {
				//注意：百度小程序会触发两次
				// #ifndef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
				let index = e.target.current || e.detail.current;
				this.switchTab(index);
				// #endif

			},
			switchTab(index) {
				if (this.pageList[index].dataList.length === 0) {
					this.loadTabData(index);
				}
				if (this.tabIndex === index) {
					return;
				}

				//缓存tabId
				if (this.pageList[this.tabIndex].dataList.length > MAX_CACHE_DATA) {
					let isExit = this.cacheTab.indexOf(this.tabIndex);
					if (isExit < 0) {
						this.cacheTab.push(this.tabIndex);
					}
				}
				this.tabIndex = index;

				// #ifdef APP-NVUE
				this.scrollTabTo(index);
				// #endif

				// #ifdef APP-NVUE
				this.scrollInto = this.tabList[index].id;
				// #endif

				//释放tabId
				if (this.cacheTab.length > MAX_CACHE_PAGE) {
					let cacheIndex = this.cacheTab[0];
					this.clearTabData(cacheIndex);
					this.cacheTab.splice(0, 1);
				}

			},
			scrollTabTo(index) {
				const el = this.$refs['tabitem' + index][0];
				let offset = 0;
				// TODO fix ios offset
				if (index > 0) {
					offset = this.tabbarWidth / 2 - this.tabListSize[index].width / 2;
					if (this.tabListSize[index].right < this.tabbarWidth / 2) {
						offset = this.tabListSize[0].width;
					}
				}
				dom.scrollToElement(el, {
					offset: -offset
				});
			},
			updateIndicator(left, width) {
				this.indicatorLineLeft = left;
				this.indicatorLineWidth = width;
			},
			onSwiperScroll(e) {
				if (this.isTab) {
					return;
				}

				var offsetX = e.detail.dx;
				var preloadIndex = this._lastTabIndex
				if (offsetX > TAB_PRELOAD_OFFSET) {
					preloadIndex++;
				} else if (offsetX < -TAB_PRELOAD_OFFSET) {
					preloadIndex--;
				}

				if (preloadIndex === this._lastTabIndex || preloadIndex < 0 || preloadIndex > this.pageList.length - 1) {
					return;
				}
				if (this.pageList[preloadIndex].dataList.length == 0) {
					this.loadTabData(preloadIndex);
				}

				// #ifdef APP-PLUS || H5 || MP-WEIXIN||MP-QQ
				var percentage = Math.abs(this.swiperWidth / offsetX);
				var currentSize = this.tabListSize[this._lastTabIndex];
				var preloadSize = this.tabListSize[preloadIndex];
				var lineL = currentSize.left + (preloadSize.left - currentSize.left) / percentage;
				var lineW = currentSize.width + (preloadSize.width - currentSize.width) / percentage;
				this.updateIndicator(lineL, lineW);
				// #endif

			},
			animationFinish(e) {
				// #ifdef APP-PLUS || H5 || MP-WEIXIN || MP-QQ
				let index = e.detail.current;
				if (this._touchTabIndex === index) {
					this.isTab = false;
				}
				this._lastTabIndex = index;
				this.switchTab(index);
				this.updateIndicator(this.tabListSize[index].left, this.tabListSize[index].width);
				// #endif

			},
			selectorQuery() {
				// #ifdef APP-NVUE
				dom.getComponentRect(this.$refs.tabbar1, res => {
					this.tabbarWidth = res.size.width;
				});
				dom.getComponentRect(this.$refs['swiper1'], res => {
					this.swiperWidth = res.size.width;
				});
				// for (var i = 0; i < this.tabList.length; i++) {
				// 	this.getElementSize(dom, this.$refs['tabitem' + i][0], i);
				// }
				// 因 nvue 暂不支持 class 查询
				var queryTabSize = uni.createSelectorQuery().in(this);
				for (var i = 0; i < this.tabList.length; i++) {
					queryTabSize.select('#' + this.tabList[i].id).boundingClientRect();
				}
				queryTabSize.exec(rects => {
					rects.forEach((rect) => {
						this.tabListSize[rect.dataset.id] = rect;
					})
					this.updateIndicator(this.tabListSize[this.tabIndex].left, this.tabListSize[this.tabIndex]
						.width);
					this.switchTab(this.tabIndex);
				});
				// #endif

				// #ifdef MP-WEIXIN || H5 || MP-QQ
				uni.createSelectorQuery().in(this).select('.tab-box').fields({
					dataset: true,
					size: true,
				}, (res) => {
					this.swiperWidth = res.width;
				}).exec();
				uni.createSelectorQuery().in(this).selectAll('.uni-tab-item').boundingClientRect((rects) => {
					rects.forEach((rect) => {
						this.tabListSize[rect.dataset.id] = rect;
					})
					this.updateIndicator(this.tabListSize[this.tabIndex].left, this.tabListSize[this.tabIndex]
						.width);
				}).exec();
				// #endif
			}
		}
	}
</script>

<style>
	.tabs {
		flex: 1;
		flex-direction: column;
		overflow: hidden;
		background-color: #FFFFFF;
		height: 100vh;
	}

	.tab-bar {
		width: 750rpx;
		height: 42px;
		flex-direction: row;
		white-space: nowrap;
	}

	.uni-tab-item {
		display: inline-block;
		flex-wrap: nowrap;
		padding-left: 20px;
		padding-right: 20px;
	}

	.uni-tab-item-title {
		color: #555;
		font-size: 15px;
		height: 40px;
		line-height: 40px;
		flex-wrap: nowrap;
		white-space: nowrap;
	}

	.uni-tab-item-title-active {
		color: #007AFF;
	}

	.scroll-view-indicator {
		position: relative;
		height: 2px;
		background-color: transparent;
	}

	.scroll-view-underline {
		position: absolute;
		top: 0;
		bottom: 0;
		width: 0;
		background-color: #007AFF;
	}

	.scroll-view-animation {
		transition-duration: 0.2s;
		transition-property: left;
	}

	.tab-bar-line {
		height: 1px;
		background-color: #cccccc;
	}

	.tab-box {
		flex: 1;
	}

	.swiper-item {
		flex: 1;
		flex-direction: column;
	}

	.page-item {
		flex: 1;
		flex-direction: row;
		position: absolute;
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
	}
</style>
